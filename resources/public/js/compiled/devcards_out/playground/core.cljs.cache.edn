;; Analyzed by ClojureScript 1.7.170
{:use-macros {testing cljs.test, html sablono.core, is cljs.test, defui om.next, deftest devcards.core, defcard devcards.core}, :excludes #{}, :name playground.core, :imports nil, :requires {om om.next, om.next om.next, sablono.core sablono.core, devcards.core devcards.core, cljs.test cljs.test}, :uses nil, :defs {years-til-retirement {:protocol-inline nil, :meta {:file "/Users/bert/Dropbox/source/playground/src/playground/core.cljs", :line 13, :column 7, :end-line 13, :end-column 27, :arglists (quote ([{:keys [salary expenses rate-of-return]}]))}, :name playground.core/years-til-retirement, :variadic false, :file "/Users/bert/Dropbox/source/playground/src/playground/core.cljs", :end-column 27, :method-params ([p__22316]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 13, :end-line 13, :max-fixed-arity 1, :fn-var true, :arglists (quote ([{:keys [salary expenses rate-of-return]}]))}, sample-data {:name playground.core/sample-data, :file "/Users/bert/Dropbox/source/playground/src/playground/core.cljs", :line 23, :column 1, :end-line 23, :end-column 17, :meta {:file "/Users/bert/Dropbox/source/playground/src/playground/core.cljs", :line 23, :column 6, :end-line 23, :end-column 17}}, multiplier {:protocol-inline nil, :meta {:file "/Users/bert/Dropbox/source/playground/src/playground/core.cljs", :line 28, :column 7, :end-line 28, :end-column 17, :arglists (quote ([[domain-start domain-end] [range-start range-end]]))}, :name playground.core/multiplier, :variadic false, :file "/Users/bert/Dropbox/source/playground/src/playground/core.cljs", :end-column 17, :method-params ([p__22322 p__22323]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 28, :end-line 28, :max-fixed-arity 2, :fn-var true, :arglists (quote ([[domain-start domain-end] [range-start range-end]]))}, offset {:protocol-inline nil, :meta {:file "/Users/bert/Dropbox/source/playground/src/playground/core.cljs", :line 32, :column 7, :end-line 32, :end-column 13, :arglists (quote ([[domain-start domain-end] [range-start range-end]]))}, :name playground.core/offset, :variadic false, :file "/Users/bert/Dropbox/source/playground/src/playground/core.cljs", :end-column 13, :method-params ([p__22328 p__22329]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 32, :end-line 32, :max-fixed-arity 2, :fn-var true, :arglists (quote ([[domain-start domain-end] [range-start range-end]]))}, linear-scale {:protocol-inline nil, :meta {:file "/Users/bert/Dropbox/source/playground/src/playground/core.cljs", :line 36, :column 7, :end-line 36, :end-column 19, :arglists (quote ([[domain-start domain-end] [range-start range-end]]))}, :name playground.core/linear-scale, :variadic false, :file "/Users/bert/Dropbox/source/playground/src/playground/core.cljs", :end-column 19, :method-params ([p__22334 p__22335]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 36, :end-line 36, :max-fixed-arity 2, :fn-var true, :arglists (quote ([[domain-start domain-end] [range-start range-end]]))}, translate {:protocol-inline nil, :meta {:file "/Users/bert/Dropbox/source/playground/src/playground/core.cljs", :line 42, :column 7, :end-line 42, :end-column 16, :arglists (quote ([x y]))}, :name playground.core/translate, :variadic false, :file "/Users/bert/Dropbox/source/playground/src/playground/core.cljs", :end-column 16, :method-params ([x y]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 42, :end-line 42, :max-fixed-arity 2, :fn-var true, :arglists (quote ([x y]))}, test-linear-scale {:protocol-inline nil, :meta {:file "/Users/bert/Dropbox/source/playground/src/playground/core.cljs", :line 45, :column 10, :end-line 45, :end-column 27}, :name playground.core/test-linear-scale, :variadic false, :file "/Users/bert/Dropbox/source/playground/src/playground/core.cljs", :end-column 27, :method-params ([]), :protocol-impl nil, :arglists-meta (), :column 1, :line 45, :end-line 45, :max-fixed-arity 0, :fn-var true, :arglists nil, :test true}, main {:protocol-inline nil, :meta {:file "/Users/bert/Dropbox/source/playground/src/playground/core.cljs", :line 75, :column 7, :end-line 75, :end-column 11, :arglists (quote ([]))}, :name playground.core/main, :variadic false, :file "/Users/bert/Dropbox/source/playground/src/playground/core.cljs", :end-column 11, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 75, :end-line 75, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}}, :require-macros {om om.next, om.next om.next, sablono.core sablono.core, devcards.core devcards.core, cljs.test cljs.test}, :cljs.analyzer/constants {:seen #{:path linear-scale = :title-card :testing-contexts :func :ns playground.core/test-linear-scale :name multiplier :expenses :file :end-column :type offset :documentation :column :playground.core :main-obj :fail :rate-of-return :line not :initial-data :expected :end-line :test-linear-scale playground.core :error :options :pass :arglists :actual :doc :test :simulated-growth :message test-linear-scale :salary}, :order [:path :func :playground.core :title-card :name :documentation :main-obj :initial-data :options :salary :expenses :rate-of-return :simulated-growth :test-linear-scale :testing-contexts :type :expected :actual :message :error = offset :pass :fail not linear-scale multiplier playground.core/test-linear-scale :ns :file :end-column :column :line :end-line :arglists :doc :test playground.core test-linear-scale]}, :doc nil}