;; Analyzed by ClojureScript 1.7.170
{:use-macros {testing cljs.test, html sablono.core, is cljs.test, defui om.next, deftest devcards.core, defcard devcards.core}, :excludes #{}, :name playground.core, :imports nil, :requires {om om.next, om.next om.next, sablono.core sablono.core, devcards.core devcards.core, cljs.test cljs.test}, :uses nil, :defs {linear-scale {:protocol-inline nil, :meta {:file "/Users/bert/Dropbox/source/playground/src/playground/core.cljs", :line 36, :column 7, :end-line 36, :end-column 19, :arglists (quote ([[domain-start domain-end] [range-start range-end]]))}, :name playground.core/linear-scale, :variadic false, :file "/Users/bert/Dropbox/source/playground/src/playground/core.cljs", :end-column 19, :method-params ([p__20853 p__20854]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 36, :end-line 36, :max-fixed-arity 2, :fn-var true, :arglists (quote ([[domain-start domain-end] [range-start range-end]]))}, main {:protocol-inline nil, :meta {:file "/Users/bert/Dropbox/source/playground/src/playground/core.cljs", :line 107, :column 7, :end-line 107, :end-column 11, :arglists (quote ([]))}, :name playground.core/main, :variadic false, :file "/Users/bert/Dropbox/source/playground/src/playground/core.cljs", :end-column 11, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 107, :end-line 107, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, years-til-retirement {:protocol-inline nil, :meta {:file "/Users/bert/Dropbox/source/playground/src/playground/core.cljs", :line 13, :column 7, :end-line 13, :end-column 27, :arglists (quote ([{:keys [salary expenses rate-of-return]}]))}, :name playground.core/years-til-retirement, :variadic false, :file "/Users/bert/Dropbox/source/playground/src/playground/core.cljs", :end-column 27, :method-params ([p__20835]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 13, :end-line 13, :max-fixed-arity 1, :fn-var true, :arglists (quote ([{:keys [salary expenses rate-of-return]}]))}, editable-parameter {:protocol-inline nil, :meta {:file "/Users/bert/Dropbox/source/playground/src/playground/core.cljs", :line 81, :column 7, :end-line 81, :end-column 25, :arglists (quote ([state [k v]]))}, :name playground.core/editable-parameter, :variadic false, :file "/Users/bert/Dropbox/source/playground/src/playground/core.cljs", :end-column 25, :method-params ([state p__20881]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 81, :end-line 81, :max-fixed-arity 2, :fn-var true, :arglists (quote ([state [k v]]))}, multiplier {:protocol-inline nil, :meta {:file "/Users/bert/Dropbox/source/playground/src/playground/core.cljs", :line 28, :column 7, :end-line 28, :end-column 17, :arglists (quote ([[domain-start domain-end] [range-start range-end]]))}, :name playground.core/multiplier, :variadic false, :file "/Users/bert/Dropbox/source/playground/src/playground/core.cljs", :end-column 17, :method-params ([p__20841 p__20842]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 28, :end-line 28, :max-fixed-arity 2, :fn-var true, :arglists (quote ([[domain-start domain-end] [range-start range-end]]))}, column-chart {:protocol-inline nil, :meta {:file "/Users/bert/Dropbox/source/playground/src/playground/core.cljs", :line 62, :column 7, :end-line 62, :end-column 19, :arglists (quote ([data width height]))}, :name playground.core/column-chart, :variadic false, :file "/Users/bert/Dropbox/source/playground/src/playground/core.cljs", :end-column 19, :method-params ([data width height]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 62, :end-line 62, :max-fixed-arity 3, :fn-var true, :arglists (quote ([data width height]))}, offset {:protocol-inline nil, :meta {:file "/Users/bert/Dropbox/source/playground/src/playground/core.cljs", :line 32, :column 7, :end-line 32, :end-column 13, :arglists (quote ([[domain-start domain-end] [range-start range-end]]))}, :name playground.core/offset, :variadic false, :file "/Users/bert/Dropbox/source/playground/src/playground/core.cljs", :end-column 13, :method-params ([p__20847 p__20848]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 32, :end-line 32, :max-fixed-arity 2, :fn-var true, :arglists (quote ([[domain-start domain-end] [range-start range-end]]))}, sample-data {:name playground.core/sample-data, :file "/Users/bert/Dropbox/source/playground/src/playground/core.cljs", :line 23, :column 1, :end-line 23, :end-column 17, :meta {:file "/Users/bert/Dropbox/source/playground/src/playground/core.cljs", :line 23, :column 6, :end-line 23, :end-column 17}}, display-thousands {:protocol-inline nil, :meta {:file "/Users/bert/Dropbox/source/playground/src/playground/core.cljs", :line 59, :column 7, :end-line 59, :end-column 24, :arglists (quote ([n]))}, :name playground.core/display-thousands, :variadic false, :file "/Users/bert/Dropbox/source/playground/src/playground/core.cljs", :end-column 24, :method-params ([n]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 59, :end-line 59, :max-fixed-arity 1, :fn-var true, :arglists (quote ([n]))}, translate {:protocol-inline nil, :meta {:file "/Users/bert/Dropbox/source/playground/src/playground/core.cljs", :line 42, :column 7, :end-line 42, :end-column 16, :arglists (quote ([x y]))}, :name playground.core/translate, :variadic false, :file "/Users/bert/Dropbox/source/playground/src/playground/core.cljs", :end-column 16, :method-params ([x y]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 42, :end-line 42, :max-fixed-arity 2, :fn-var true, :arglists (quote ([x y]))}, test-linear-scale {:protocol-inline nil, :meta {:file "/Users/bert/Dropbox/source/playground/src/playground/core.cljs", :line 45, :column 10, :end-line 45, :end-column 27}, :name playground.core/test-linear-scale, :variadic false, :file "/Users/bert/Dropbox/source/playground/src/playground/core.cljs", :end-column 27, :method-params ([]), :protocol-impl nil, :arglists-meta (), :column 1, :line 45, :end-line 45, :max-fixed-arity 0, :fn-var true, :arglists nil, :test true}}, :require-macros {om om.next, om.next om.next, sablono.core sablono.core, devcards.core devcards.core, cljs.test cljs.test}, :cljs.analyzer/constants {:seen #{:y :path linear-scale = :title-card :transform :column-chart :color :testing-contexts :button :func :ns playground.core/test-linear-scale :name multiplier :expenses :file :end-column :width :dy :type offset :documentation :column :playground.core :div :g :editing :main-obj :fail :rate-of-return :line not :initial-data :expected :end-line :test-linear-scale playground.core :error :options :x :pass :input :arglists :actual :doc :rect :test :onClick :simulated-growth :interactive-chart :message test-linear-scale :height :salary :text}, :order [:path :func :playground.core :title-card :name :documentation :main-obj :initial-data :options :salary :expenses :rate-of-return :simulated-growth :test-linear-scale :testing-contexts :type :expected :actual :message :error = offset :pass :fail not linear-scale multiplier playground.core/test-linear-scale :ns :file :end-column :column :line :end-line :arglists :doc :test playground.core test-linear-scale :g :transform :rect :y :height :width :text :x :dy :color :column-chart :editing :div :input :button :onClick :interactive-chart]}, :doc nil}