;; Analyzed by ClojureScript 1.7.170
{:use-macros {testing cljs.test, html sablono.core, is cljs.test, defui om.next, deftest devcards.core, defcard devcards.core}, :excludes #{}, :name playground.core, :imports nil, :requires {om om.next, om.next om.next, sablono.core sablono.core, devcards.core devcards.core, cljs.test cljs.test}, :uses nil, :defs {years-til-retirement {:protocol-inline nil, :meta {:file "/Users/bert/Dropbox/source/playground/src/playground/core.cljs", :line 13, :column 7, :end-line 13, :end-column 27, :arglists (quote ([{:keys [salary expenses rate-of-return cutoff]}]))}, :name playground.core/years-til-retirement, :variadic false, :file "/Users/bert/Dropbox/source/playground/src/playground/core.cljs", :end-column 27, :method-params ([p__33806]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 13, :end-line 13, :max-fixed-arity 1, :fn-var true, :arglists (quote ([{:keys [salary expenses rate-of-return cutoff]}]))}, linear-scale {:protocol-inline nil, :meta {:file "/Users/bert/Dropbox/source/playground/src/playground/core.cljs", :line 26, :column 7, :end-line 26, :end-column 19, :arglists (quote ([[domain-start domain-end] [range-start range-end]]))}, :name playground.core/linear-scale, :variadic false, :file "/Users/bert/Dropbox/source/playground/src/playground/core.cljs", :end-column 19, :method-params ([p__33812 p__33813]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 26, :end-line 26, :max-fixed-arity 2, :fn-var true, :arglists (quote ([[domain-start domain-end] [range-start range-end]]))}, translate {:protocol-inline nil, :meta {:file "/Users/bert/Dropbox/source/playground/src/playground/core.cljs", :line 32, :column 7, :end-line 32, :end-column 16, :arglists (quote ([x y]))}, :name playground.core/translate, :variadic false, :file "/Users/bert/Dropbox/source/playground/src/playground/core.cljs", :end-column 16, :method-params ([x y]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 32, :end-line 32, :max-fixed-arity 2, :fn-var true, :arglists (quote ([x y]))}, thousands->k {:protocol-inline nil, :meta {:file "/Users/bert/Dropbox/source/playground/src/playground/core.cljs", :line 35, :column 7, :end-line 35, :end-column 19, :arglists (quote ([n]))}, :name playground.core/thousands->k, :variadic false, :file "/Users/bert/Dropbox/source/playground/src/playground/core.cljs", :end-column 19, :method-params ([n]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 35, :end-line 35, :max-fixed-arity 1, :fn-var true, :arglists (quote ([n]))}, column-chart {:protocol-inline nil, :meta {:file "/Users/bert/Dropbox/source/playground/src/playground/core.cljs", :line 38, :column 7, :end-line 38, :end-column 19, :arglists (quote ([data width height]))}, :name playground.core/column-chart, :variadic false, :file "/Users/bert/Dropbox/source/playground/src/playground/core.cljs", :end-column 19, :method-params ([data width height]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 38, :end-line 38, :max-fixed-arity 3, :fn-var true, :arglists (quote ([data width height]))}, coerce-to-type-of {:protocol-inline nil, :meta {:file "/Users/bert/Dropbox/source/playground/src/playground/core.cljs", :line 53, :column 7, :end-line 53, :end-column 24, :arglists (quote ([orig v]))}, :name playground.core/coerce-to-type-of, :variadic false, :file "/Users/bert/Dropbox/source/playground/src/playground/core.cljs", :end-column 24, :method-params ([orig v]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 53, :end-line 53, :max-fixed-arity 2, :fn-var true, :arglists (quote ([orig v]))}, editable-parameter {:protocol-inline nil, :meta {:file "/Users/bert/Dropbox/source/playground/src/playground/core.cljs", :line 58, :column 7, :end-line 58, :end-column 25, :arglists (quote ([state [k v]]))}, :name playground.core/editable-parameter, :variadic false, :file "/Users/bert/Dropbox/source/playground/src/playground/core.cljs", :end-column 25, :method-params ([state p__33825]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 58, :end-line 58, :max-fixed-arity 2, :fn-var true, :arglists (quote ([state [k v]]))}, retirement-vals {:protocol-inline nil, :meta {:file "/Users/bert/Dropbox/source/playground/src/playground/core.cljs", :line 80, :column 7, :end-line 80, :end-column 22, :arglists (quote ([m]))}, :name playground.core/retirement-vals, :variadic false, :file "/Users/bert/Dropbox/source/playground/src/playground/core.cljs", :end-column 22, :method-params ([m]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 80, :end-line 80, :max-fixed-arity 1, :fn-var true, :arglists (quote ([m]))}, main {:protocol-inline nil, :meta {:file "/Users/bert/Dropbox/source/playground/src/playground/core.cljs", :line 95, :column 7, :end-line 95, :end-column 11, :arglists (quote ([]))}, :name playground.core/main, :variadic false, :file "/Users/bert/Dropbox/source/playground/src/playground/core.cljs", :end-column 11, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 95, :end-line 95, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}}, :require-macros {om om.next, om.next om.next, sablono.core sablono.core, devcards.core devcards.core, cljs.test cljs.test}, :cljs.analyzer/constants {:seen #{:y :path every? :title-card :transform :color salary :button :func :name :expenses :width :dy :type :documentation :playground.core expenses :div :g :editing :main-obj :rate-of-return :initial-data :options :x :input rate-of-return :rect :cutoff :onClick :interactive-chart number? :height :salary :text}, :order [:path :func :playground.core :title-card :name :documentation :main-obj :initial-data :options :salary :expenses :rate-of-return :cutoff every? number? salary expenses rate-of-return :g :transform :rect :y :height :width :text :x :dy :color :editing :div :input :type :button :onClick :interactive-chart]}, :doc nil}